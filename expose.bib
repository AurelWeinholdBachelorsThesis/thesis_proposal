
@techreport{di_stefano_berkeley_2020,
	title = {Berkeley {Packet} {Filter}: theory, practice and perspectives},
	url = {https://amslaurea.unibo.it/19622/1/berkeleypacketfilter_distefano.pdf},
	language = {en},
	urldate = {2022-05-15},
	author = {Di Stefano, Michele},
	year = {2020},
	pages = {113},
	file = {Full Text:/home/aurel/.cache/zotero/storage/YUXHZ2DV/Di Stefano - 2020 - Berkeley Packet Filter theory, practice and persp.pdf:application/pdf},
}

@inproceedings{mccanne_bsd_1992,
	address = {San Diego, CA},
	title = {The {BSD} {Packet} {Filter}: {A} new {Architecture} fpr {User}-level {Packet} {Capture}},
	url = {https://vodun.org/papers/net-papers/van_jacobson_the_bpf_packet_filter.pdf},
	language = {en},
	urldate = {2022-05-15},
	publisher = {Lawrence Berkeley Laboratory},
	author = {McCanne, Steven and Jacobson, Van},
	month = dec,
	year = {1992},
	pages = {11},
	file = {Full Text:/home/aurel/.cache/zotero/storage/BBFGXCFP/McCanne and Jacobson - 1992 - The BSD Packet Filter A new Architecture fpr User.pdf:application/pdf},
}

@techreport{zandberg_minimal_2020,
	title = {Minimal {Virtual} {Machines} on {IoT} {Microcontrollers}: {The} {Case} of {Berkeley} {Packet} {Filters} with {rBPF}},
	shorttitle = {Minimal {Virtual} {Machines} on {IoT} {Microcontrollers}},
	url = {http://arxiv.org/abs/2011.12047},
	abstract = {Virtual machines (VM) are widely used to host and isolate software modules. However, extremely small memory and low-energy budgets have so far prevented wide use of VMs on typical microcontroller-based IoT devices. In this paper, we explore the potential of two minimal VM approaches on such low-power hardware. We design rBPF, a register-based VM based on extended Berkeley Packet Filters (eBPF). We compare it with a stack-based VM based on WebAssembly (Wasm) adapted for embedded systems. We implement prototypes of each VM, hosted in the IoT operating system RIOT. We perform measurements on commercial off-the-shelf IoT hardware. Unsurprisingly, we observe that both Wasm and rBPF virtual machines yield execution time and memory overhead, compared to not using a VM. We show however that this execution time overhead is tolerable for low-throughput, low-energy IoT devices. We further show that, while using a VM based on Wasm entails doubling the memory budget for a simple networked IoT application using a 6LoWPAN/CoAP stack, using a VM based on rBPF requires only negligible memory overhead (less than 10\% more memory). rBPF is thus a promising approach to host small software modules, isolated from OS software, and updatable on-demand, over low-power networks.},
	number = {arXiv:2011.12047},
	urldate = {2022-05-15},
	institution = {arXiv},
	author = {Zandberg, Koen and Baccelli, Emmanuel},
	month = dec,
	year = {2020},
	doi = {10.48550/arXiv.2011.12047},
	note = {arXiv:2011.12047 [cs]
type: article},
	keywords = {Computer Science - Networking and Internet Architecture, Computer Science - Operating Systems},
	file = {arXiv Fulltext PDF:/home/aurel/.cache/zotero/storage/6824QQXS/Zandberg and Baccelli - 2020 - Minimal Virtual Machines on IoT Microcontrollers .pdf:application/pdf;arXiv.org Snapshot:/home/aurel/.cache/zotero/storage/YB4J8BRY/2011.html:text/html},
}

@article{vieira_fast_2020,
	title = {Fast {Packet} {Processing} with {eBPF} and {XDP}: {Concepts}, {Code}, {Challenges}, and {Applications}},
	volume = {53},
	issn = {0360-0300},
	shorttitle = {Fast {Packet} {Processing} with {eBPF} and {XDP}},
	url = {https://doi.org/10.1145/3371038},
	doi = {10.1145/3371038},
	abstract = {Extended Berkeley Packet Filter (eBPF) is an instruction set and an execution environment inside the Linux kernel. It enables modification, interaction, and kernel programmability at runtime. eBPF can be used to program the eXpress Data Path (XDP), a kernel network layer that processes packets closer to the NIC for fast packet processing. Developers can write programs in C or P4 languages and then compile to eBPF instructions, which can be processed by the kernel or by programmable devices (e.g., SmartNICs). Since its introduction in 2014, eBPF has been rapidly adopted by major companies such as Facebook, Cloudflare, and Netronome. Use cases include network monitoring, network traffic manipulation, load balancing, and system profiling. This work aims to present eBPF to an inexpert audience, covering the main theoretical and fundamental aspects of eBPF and XDP, as well as introducing the reader to simple examples to give insight into the general operation and use of both technologies.},
	number = {1},
	urldate = {2022-05-15},
	journal = {ACM Computing Surveys},
	author = {Vieira, Marcos A. M. and Castanho, Matheus S. and Pacífico, Racyus D. G. and Santos, Elerson R. S. and Júnior, Eduardo P. M. Câmara and Vieira, Luiz F. M.},
	month = feb,
	year = {2020},
	keywords = {Computer networking, network functions, packet processing},
	pages = {16:1--16:36},
}

@inproceedings{miano_creating_2018,
	title = {Creating {Complex} {Network} {Services} with {eBPF}: {Experience} and {Lessons} {Learned}},
	shorttitle = {Creating {Complex} {Network} {Services} with {eBPF}},
	doi = {10.1109/HPSR.2018.8850758},
	abstract = {The extended Berkeley Packet Filter (eBPF) is a recent technology available in the Linux kernel that enables flexible data processing. However, so far the eBPF was mainly used for monitoring tasks such as memory, CPU, page faults, traffic, and more, with a few examples of traditional network services, e.g., that modify the data in transit. In fact, the creation of complex network functions that go beyond simple proof-of-concept data plane applications has proven to be challenging due to the several limitations of this technology, but at the same time very promising due to some characteristics (e.g., dynamic recompilation of the source code) that are not available elsewhere. Based on our experience, this paper presents the most promising characteristics of this technology and the main encountered limitations, and we envision some solutions that can mitigate the latter. We also summarize the most important lessons learned while exploiting eBPF to create complex network functions and, finally, we provide a quantitative characterization of the most significant aspects of this technology.},
	booktitle = {2018 {IEEE} 19th {International} {Conference} on {High} {Performance} {Switching} and {Routing} ({HPSR})},
	author = {Miano, Sebastiano and Bertrone, Matteo and Risso, Fulvio and Tumolo, Massimo and Bernal, Mauricio Vásquez},
	month = jun,
	year = {2018},
	note = {ISSN: 2325-5609},
	keywords = {network functions, Band-pass filters, Complex networks, Data processing, dataplane, eBPF, Kernel, Linux, NFV, Task analysis, Virtual machining, XDP},
	pages = {1--8},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/K4AGHHWA/8850758.html:text/html;IEEE Xplore Full Text PDF:/home/aurel/.cache/zotero/storage/5ZYF4CQ7/Miano et al. - 2018 - Creating Complex Network Services with eBPF Exper.pdf:application/pdf},
}

@techreport{kicinski_ebpf_2016,
	address = {Cambridge, UK},
	type = {Paper},
	title = {{eBPF} {Hardware} {Offload} to {SmartNICs}: cls bpf and {XDP}},
	url = {https://netdevconf.info/1.2/papers/eBPF_HW_OFFLOAD.pdf},
	abstract = {This paper will lay out a method used to offload eBPF/XDP programs to SmartNICs which allows the general acceleration of any eBPF programs. We will concentrate on kernel infrastructure which has been developed and the in-kernel JIT/translator while covering the HW target architecture to the necessary degree.},
	language = {en},
	urldate = {2022-05-15},
	institution = {Netronome Systems},
	author = {Kicinski, Jakub and Viljoen, Nicolaas},
	year = {2016},
	pages = {6},
	file = {Full Text:/home/aurel/.cache/zotero/storage/XVV38UNC/Kicinski and Viljoen - 2016 - eBPF Hardware Offload to SmartNICs cls bpf and XD.pdf:application/pdf},
}

@article{peng_is_2021,
	title = {Is {Cloud} {RAN} a {Feasible} {Option} for {Industrial} {Communication} {Network}?},
	volume = {17},
	doi = {10.24138/jcomss-2021-0017},
	abstract = {Cloud RAN (C-RAN) is a promising paradigm for the next generation radio access network infrastructure, which offers centralised and coordinated base-band signal processing in a cloud-based BBU pool. This requires extremely low latency responses to achieve real-time signal processing. In this paper, we analysed the challenges to introduce cloud native model for signal processing in C-RAN. We studied the difficulties of achieving real-time processing in a cloud infrastructure by addressing its latency-constraint. To evaluate the performance of such a system, we mainly investigated a massive MIMO pilot scheduling process in a C-RAN infrastructure under a factory automation scenario. We considered the stochastic delays incurred by the cloud execution environment as the main constraint that has has impact on the scheduling performance. We use simulations to provide insights on the feasibility of C-RAN deployment for industrial communication, which has stringent criteria to meet Industry 4.0 standards under this constraint. Our experiment results show that, concerning a pilot scheduling problem, the CRAN system is capable of meeting the industrial criteria when the fronthaul and the cloud execution environment has introduced latency in the order of milliseconds.},
	journal = {Journal of Communications Software and Systems},
	author = {Peng, Haorui and Tärneberg, William and Fitzgerald, Emma and Kihl, Maria},
	month = jun,
	year = {2021},
	pages = {97--105},
	file = {Full Text PDF:/home/aurel/.cache/zotero/storage/RBX9MK9W/Peng et al. - 2021 - Is Cloud RAN a Feasible Option for Industrial Comm.pdf:application/pdf},
}

@article{skarin_towards_2018,
	title = {Towards {Mission}-{Critical} {Control} at the {Edge} and {Over} {5G}},
	abstract = {With the emergence of industrial IoT and cloud computing, and the advent of 5G and edge clouds, there is an understanding that the responsiveness and reliability of wireless communication and of the cloud is set to improve significantly. The users of this infrastructure have high hopes of elasticity, economies of scale, and fast time to market for their demanding use cases on the next generation of ICT networks. To enable industrial uptake of edge clouds we must provide capacity in the networks but also a sufficient level of simplicity and self-sustainability in the software platforms. In this paper we present a research test-bed which we built to study mission-critical control over the distributed edge cloud. Through our use of 5G wireless radio we allow for mobility and reliably provide compute resources and low latency at the edge. Additionally, the software platform provides the means to continuously operate our mission-critical application while seamlessly relocating computations across geographically dispersed compute nodes. The contribution of the paper is a fully operational system which shows the potential for merged IoT, 5G and cloud. It is applied to a simple, conventional control application which does not obscure system properties or limitations behind a complex implementation. Our evaluations point to fundamental research topics on the underlying cloud native application framework and the controller.},
	author = {Skarin, Per and Tärneberg, William and Arzen, Karl-Erik and Kihl, Maria},
	month = mar,
	year = {2018},
}

@article{skarin_towards_2018-1,
	title = {Towards {Mission}-{Critical} {Control} at the {Edge} and {Over} {5G}},
	abstract = {With the emergence of industrial IoT and cloud computing, and the advent of 5G and edge clouds, there is an understanding that the responsiveness and reliability of wireless communication and of the cloud is set to improve significantly. The users of this infrastructure have high hopes of elasticity, economies of scale, and fast time to market for their demanding use cases on the next generation of ICT networks. To enable industrial uptake of edge clouds we must provide capacity in the networks but also a sufficient level of simplicity and self-sustainability in the software platforms. In this paper we present a research test-bed which we built to study mission-critical control over the distributed edge cloud. Through our use of 5G wireless radio we allow for mobility and reliably provide compute resources and low latency at the edge. Additionally, the software platform provides the means to continuously operate our mission-critical application while seamlessly relocating computations across geographically dispersed compute nodes. The contribution of the paper is a fully operational system which shows the potential for merged IoT, 5G and cloud. It is applied to a simple, conventional control application which does not obscure system properties or limitations behind a complex implementation. Our evaluations point to fundamental research topics on the underlying cloud native application framework and the controller.},
	author = {Skarin, Per and Tärneberg, William and Arzen, Karl-Erik and Kihl, Maria},
	month = mar,
	year = {2018},
}

@article{boyes_industrial_2018,
	title = {The industrial internet of things ({IIoT}): {An} analysis framework},
	volume = {101},
	issn = {0166-3615},
	shorttitle = {The industrial internet of things ({IIoT})},
	url = {https://www.sciencedirect.com/science/article/pii/S0166361517307285},
	doi = {10.1016/j.compind.2018.04.015},
	abstract = {Historically, Industrial Automation and Control Systems (IACS) were largely isolated from conventional digital networks such as enterprise ICT environments. Where connectivity was required, a zoned architecture was adopted, with firewalls and/or demilitarized zones used to protect the core control system components. The adoption and deployment of ‘Internet of Things’ (IoT) technologies is leading to architectural changes to IACS, including greater connectivity to industrial systems. This paper reviews what is meant by Industrial IoT (IIoT) and relationships to concepts such as cyber-physical systems and Industry 4.0. The paper develops a definition of IIoT and analyses related partial IoT taxonomies. It develops an analysis framework for IIoT that can be used to enumerate and characterise IIoT devices when studying system architectures and analysing security threats and vulnerabilities. The paper concludes by identifying some gaps in the literature.},
	language = {en},
	urldate = {2022-06-07},
	journal = {Computers in Industry},
	author = {Boyes, Hugh and Hallaq, Bil and Cunningham, Joe and Watson, Tim},
	month = oct,
	year = {2018},
	keywords = {Cyber-physical systems, IACS, IIoT, Industrial internet of things, Industry 4.0},
	pages = {1--12},
	file = {Full Text:/home/aurel/.cache/zotero/storage/SSY5KAHE/Boyes et al. - 2018 - The industrial internet of things (IIoT) An analy.pdf:application/pdf;ScienceDirect Snapshot:/home/aurel/.cache/zotero/storage/WMZRLYM7/S0166361517307285.html:text/html},
}
