
@techreport{di_stefano_berkeley_2020,
	title = {Berkeley {Packet} {Filter}: theory, practice and perspectives},
	url = {https://amslaurea.unibo.it/19622/1/berkeleypacketfilter_distefano.pdf},
	language = {en},
	urldate = {2022-05-15},
	author = {Di Stefano, Michele},
	year = {2020},
	pages = {113},
	file = {Full Text:/home/aurel/.cache/zotero/storage/YUXHZ2DV/Di Stefano - 2020 - Berkeley Packet Filter theory, practice and persp.pdf:application/pdf},
}

@inproceedings{mccanne_bsd_1992,
	address = {San Diego, CA},
	title = {The {BSD} {Packet} {Filter}: {A} new {Architecture} fpr {User}-level {Packet} {Capture}},
	url = {https://vodun.org/papers/net-papers/van_jacobson_the_bpf_packet_filter.pdf},
	language = {en},
	urldate = {2022-05-15},
	publisher = {Lawrence Berkeley Laboratory},
	author = {McCanne, Steven and Jacobson, Van},
	month = dec,
	year = {1992},
	pages = {11},
	file = {Full Text:/home/aurel/.cache/zotero/storage/BBFGXCFP/McCanne and Jacobson - 1992 - The BSD Packet Filter A new Architecture fpr User.pdf:application/pdf},
}

@techreport{zandberg_minimal_2020,
	title = {Minimal {Virtual} {Machines} on {IoT} {Microcontrollers}: {The} {Case} of {Berkeley} {Packet} {Filters} with {rBPF}},
	shorttitle = {Minimal {Virtual} {Machines} on {IoT} {Microcontrollers}},
	url = {http://arxiv.org/abs/2011.12047},
	abstract = {Virtual machines (VM) are widely used to host and isolate software modules. However, extremely small memory and low-energy budgets have so far prevented wide use of VMs on typical microcontroller-based IoT devices. In this paper, we explore the potential of two minimal VM approaches on such low-power hardware. We design rBPF, a register-based VM based on extended Berkeley Packet Filters (eBPF). We compare it with a stack-based VM based on WebAssembly (Wasm) adapted for embedded systems. We implement prototypes of each VM, hosted in the IoT operating system RIOT. We perform measurements on commercial off-the-shelf IoT hardware. Unsurprisingly, we observe that both Wasm and rBPF virtual machines yield execution time and memory overhead, compared to not using a VM. We show however that this execution time overhead is tolerable for low-throughput, low-energy IoT devices. We further show that, while using a VM based on Wasm entails doubling the memory budget for a simple networked IoT application using a 6LoWPAN/CoAP stack, using a VM based on rBPF requires only negligible memory overhead (less than 10\% more memory). rBPF is thus a promising approach to host small software modules, isolated from OS software, and updatable on-demand, over low-power networks.},
	number = {arXiv:2011.12047},
	urldate = {2022-05-15},
	institution = {arXiv},
	author = {Zandberg, Koen and Baccelli, Emmanuel},
	month = dec,
	year = {2020},
	doi = {10.48550/arXiv.2011.12047},
	note = {arXiv:2011.12047 [cs]
type: article},
	keywords = {Computer Science - Networking and Internet Architecture, Computer Science - Operating Systems},
	file = {arXiv Fulltext PDF:/home/aurel/.cache/zotero/storage/6824QQXS/Zandberg and Baccelli - 2020 - Minimal Virtual Machines on IoT Microcontrollers .pdf:application/pdf;arXiv.org Snapshot:/home/aurel/.cache/zotero/storage/YB4J8BRY/2011.html:text/html},
}

@article{vieira_fast_2020,
	title = {Fast {Packet} {Processing} with {eBPF} and {XDP}: {Concepts}, {Code}, {Challenges}, and {Applications}},
	volume = {53},
	issn = {0360-0300},
	shorttitle = {Fast {Packet} {Processing} with {eBPF} and {XDP}},
	url = {https://doi.org/10.1145/3371038},
	doi = {10.1145/3371038},
	abstract = {Extended Berkeley Packet Filter (eBPF) is an instruction set and an execution environment inside the Linux kernel. It enables modification, interaction, and kernel programmability at runtime. eBPF can be used to program the eXpress Data Path (XDP), a kernel network layer that processes packets closer to the NIC for fast packet processing. Developers can write programs in C or P4 languages and then compile to eBPF instructions, which can be processed by the kernel or by programmable devices (e.g., SmartNICs). Since its introduction in 2014, eBPF has been rapidly adopted by major companies such as Facebook, Cloudflare, and Netronome. Use cases include network monitoring, network traffic manipulation, load balancing, and system profiling. This work aims to present eBPF to an inexpert audience, covering the main theoretical and fundamental aspects of eBPF and XDP, as well as introducing the reader to simple examples to give insight into the general operation and use of both technologies.},
	number = {1},
	urldate = {2022-05-15},
	journal = {ACM Computing Surveys},
	author = {Vieira, Marcos A. M. and Castanho, Matheus S. and Pacífico, Racyus D. G. and Santos, Elerson R. S. and Júnior, Eduardo P. M. Câmara and Vieira, Luiz F. M.},
	month = feb,
	year = {2020},
	keywords = {Computer networking, network functions, packet processing},
	pages = {16:1--16:36},
}

@inproceedings{miano_creating_2018,
	title = {Creating {Complex} {Network} {Services} with {eBPF}: {Experience} and {Lessons} {Learned}},
	shorttitle = {Creating {Complex} {Network} {Services} with {eBPF}},
	doi = {10.1109/HPSR.2018.8850758},
	abstract = {The extended Berkeley Packet Filter (eBPF) is a recent technology available in the Linux kernel that enables flexible data processing. However, so far the eBPF was mainly used for monitoring tasks such as memory, CPU, page faults, traffic, and more, with a few examples of traditional network services, e.g., that modify the data in transit. In fact, the creation of complex network functions that go beyond simple proof-of-concept data plane applications has proven to be challenging due to the several limitations of this technology, but at the same time very promising due to some characteristics (e.g., dynamic recompilation of the source code) that are not available elsewhere. Based on our experience, this paper presents the most promising characteristics of this technology and the main encountered limitations, and we envision some solutions that can mitigate the latter. We also summarize the most important lessons learned while exploiting eBPF to create complex network functions and, finally, we provide a quantitative characterization of the most significant aspects of this technology.},
	booktitle = {2018 {IEEE} 19th {International} {Conference} on {High} {Performance} {Switching} and {Routing} ({HPSR})},
	author = {Miano, Sebastiano and Bertrone, Matteo and Risso, Fulvio and Tumolo, Massimo and Bernal, Mauricio Vásquez},
	month = jun,
	year = {2018},
	note = {ISSN: 2325-5609},
	keywords = {network functions, Band-pass filters, Complex networks, Data processing, dataplane, eBPF, Kernel, Linux, NFV, Task analysis, Virtual machining, XDP},
	pages = {1--8},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/K4AGHHWA/8850758.html:text/html;IEEE Xplore Full Text PDF:/home/aurel/.cache/zotero/storage/5ZYF4CQ7/Miano et al. - 2018 - Creating Complex Network Services with eBPF Exper.pdf:application/pdf},
}

@techreport{kicinski_ebpf_2016,
	address = {Cambridge, UK},
	type = {Paper},
	title = {{eBPF} {Hardware} {Offload} to {SmartNICs}: cls bpf and {XDP}},
	url = {https://netdevconf.info/1.2/papers/eBPF_HW_OFFLOAD.pdf},
	abstract = {This paper will lay out a method used to offload eBPF/XDP programs to SmartNICs which allows the general acceleration of any eBPF programs. We will concentrate on kernel infrastructure which has been developed and the in-kernel JIT/translator while covering the HW target architecture to the necessary degree.},
	language = {en},
	urldate = {2022-05-15},
	institution = {Netronome Systems},
	author = {Kicinski, Jakub and Viljoen, Nicolaas},
	year = {2016},
	pages = {6},
	file = {Full Text:/home/aurel/.cache/zotero/storage/XVV38UNC/Kicinski and Viljoen - 2016 - eBPF Hardware Offload to SmartNICs cls bpf and XD.pdf:application/pdf},
}

@article{peng_is_2021,
	title = {Is {Cloud} {RAN} a {Feasible} {Option} for {Industrial} {Communication} {Network}?},
	volume = {17},
	doi = {10.24138/jcomss-2021-0017},
	abstract = {Cloud RAN (C-RAN) is a promising paradigm for the next generation radio access network infrastructure, which offers centralised and coordinated base-band signal processing in a cloud-based BBU pool. This requires extremely low latency responses to achieve real-time signal processing. In this paper, we analysed the challenges to introduce cloud native model for signal processing in C-RAN. We studied the difficulties of achieving real-time processing in a cloud infrastructure by addressing its latency-constraint. To evaluate the performance of such a system, we mainly investigated a massive MIMO pilot scheduling process in a C-RAN infrastructure under a factory automation scenario. We considered the stochastic delays incurred by the cloud execution environment as the main constraint that has has impact on the scheduling performance. We use simulations to provide insights on the feasibility of C-RAN deployment for industrial communication, which has stringent criteria to meet Industry 4.0 standards under this constraint. Our experiment results show that, concerning a pilot scheduling problem, the CRAN system is capable of meeting the industrial criteria when the fronthaul and the cloud execution environment has introduced latency in the order of milliseconds.},
	journal = {Journal of Communications Software and Systems},
	author = {Peng, Haorui and Tärneberg, William and Fitzgerald, Emma and Kihl, Maria},
	month = jun,
	year = {2021},
	pages = {97--105},
	file = {Full Text PDF:/home/aurel/.cache/zotero/storage/RBX9MK9W/Peng et al. - 2021 - Is Cloud RAN a Feasible Option for Industrial Comm.pdf:application/pdf},
}

@article{skarin_towards_2018,
	title = {Towards {Mission}-{Critical} {Control} at the {Edge} and {Over} {5G}},
	abstract = {With the emergence of industrial IoT and cloud computing, and the advent of 5G and edge clouds, there is an understanding that the responsiveness and reliability of wireless communication and of the cloud is set to improve significantly. The users of this infrastructure have high hopes of elasticity, economies of scale, and fast time to market for their demanding use cases on the next generation of ICT networks. To enable industrial uptake of edge clouds we must provide capacity in the networks but also a sufficient level of simplicity and self-sustainability in the software platforms. In this paper we present a research test-bed which we built to study mission-critical control over the distributed edge cloud. Through our use of 5G wireless radio we allow for mobility and reliably provide compute resources and low latency at the edge. Additionally, the software platform provides the means to continuously operate our mission-critical application while seamlessly relocating computations across geographically dispersed compute nodes. The contribution of the paper is a fully operational system which shows the potential for merged IoT, 5G and cloud. It is applied to a simple, conventional control application which does not obscure system properties or limitations behind a complex implementation. Our evaluations point to fundamental research topics on the underlying cloud native application framework and the controller.},
	author = {Skarin, Per and Tärneberg, William and Arzen, Karl-Erik and Kihl, Maria},
	month = mar,
	year = {2018},
}

@article{skarin_towards_2018-1,
	title = {Towards {Mission}-{Critical} {Control} at the {Edge} and {Over} {5G}},
	abstract = {With the emergence of industrial IoT and cloud computing, and the advent of 5G and edge clouds, there is an understanding that the responsiveness and reliability of wireless communication and of the cloud is set to improve significantly. The users of this infrastructure have high hopes of elasticity, economies of scale, and fast time to market for their demanding use cases on the next generation of ICT networks. To enable industrial uptake of edge clouds we must provide capacity in the networks but also a sufficient level of simplicity and self-sustainability in the software platforms. In this paper we present a research test-bed which we built to study mission-critical control over the distributed edge cloud. Through our use of 5G wireless radio we allow for mobility and reliably provide compute resources and low latency at the edge. Additionally, the software platform provides the means to continuously operate our mission-critical application while seamlessly relocating computations across geographically dispersed compute nodes. The contribution of the paper is a fully operational system which shows the potential for merged IoT, 5G and cloud. It is applied to a simple, conventional control application which does not obscure system properties or limitations behind a complex implementation. Our evaluations point to fundamental research topics on the underlying cloud native application framework and the controller.},
	author = {Skarin, Per and Tärneberg, William and Arzen, Karl-Erik and Kihl, Maria},
	month = mar,
	year = {2018},
}

@article{boyes_industrial_2018,
	title = {The industrial internet of things ({IIoT}): {An} analysis framework},
	volume = {101},
	issn = {0166-3615},
	shorttitle = {The industrial internet of things ({IIoT})},
	url = {https://www.sciencedirect.com/science/article/pii/S0166361517307285},
	doi = {10.1016/j.compind.2018.04.015},
	abstract = {Historically, Industrial Automation and Control Systems (IACS) were largely isolated from conventional digital networks such as enterprise ICT environments. Where connectivity was required, a zoned architecture was adopted, with firewalls and/or demilitarized zones used to protect the core control system components. The adoption and deployment of ‘Internet of Things’ (IoT) technologies is leading to architectural changes to IACS, including greater connectivity to industrial systems. This paper reviews what is meant by Industrial IoT (IIoT) and relationships to concepts such as cyber-physical systems and Industry 4.0. The paper develops a definition of IIoT and analyses related partial IoT taxonomies. It develops an analysis framework for IIoT that can be used to enumerate and characterise IIoT devices when studying system architectures and analysing security threats and vulnerabilities. The paper concludes by identifying some gaps in the literature.},
	language = {en},
	urldate = {2022-06-07},
	journal = {Computers in Industry},
	author = {Boyes, Hugh and Hallaq, Bil and Cunningham, Joe and Watson, Tim},
	month = oct,
	year = {2018},
	keywords = {Cyber-physical systems, IACS, IIoT, Industrial internet of things, Industry 4.0},
	pages = {1--12},
	file = {Full Text:/home/aurel/.cache/zotero/storage/SSY5KAHE/Boyes et al. - 2018 - The industrial internet of things (IIoT) An analy.pdf:application/pdf;ScienceDirect Snapshot:/home/aurel/.cache/zotero/storage/WMZRLYM7/S0166361517307285.html:text/html},
}

@misc{noauthor_industry_nodate,
	title = {Industry 4.0: {Digitalisation} for productivity and growth {\textbar} {Think} {Tank} {\textbar} {European} {Parliament}},
	shorttitle = {Industry 4.0},
	url = {https://www.europarl.europa.eu/thinktank/en/document/EPRS_BRI(2015)568337},
	abstract = {Industry 4.0: Digitalisation for productivity and growth},
	language = {en},
	urldate = {2022-06-13},
	file = {Snapshot:/home/aurel/.cache/zotero/storage/CAJNYZKY/EPRS_BRI(2015)568337.html:text/html},
}

@techreport{placek_industrial_nodate,
	title = {Industrial {IoT} - market size worldwide 2020-2028},
	url = {https://www.statista.com/statistics/611004/global-industrial-internet-of-things-market-size/},
	abstract = {The global market for industrial Internet of Things (IIoT) was sized at over 263 billion U.S.},
	language = {en},
	urldate = {2022-06-13},
	author = {Placek, Martin},
	file = {Snapshot:/home/aurel/.cache/zotero/storage/GIXLHD35/global-industrial-internet-of-things-market-size.html:text/html},
}

@article{shi_edge_2016,
	title = {Edge {Computing}: {Vision} and {Challenges}},
	volume = {3},
	issn = {2327-4662},
	shorttitle = {Edge {Computing}},
	doi = {10.1109/JIOT.2016.2579198},
	abstract = {The proliferation of Internet of Things (IoT) and the success of rich cloud services have pushed the horizon of a new computing paradigm, edge computing, which calls for processing the data at the edge of the network. Edge computing has the potential to address the concerns of response time requirement, battery life constraint, bandwidth cost saving, as well as data safety and privacy. In this paper, we introduce the definition of edge computing, followed by several case studies, ranging from cloud offloading to smart home and city, as well as collaborative edge to materialize the concept of edge computing. Finally, we present several challenges and opportunities in the field of edge computing, and hope this paper will gain attention from the community and inspire more research in this direction.},
	number = {5},
	journal = {IEEE Internet of Things Journal},
	author = {Shi, Weisong and Cao, Jie and Zhang, Quan and Li, Youhuizi and Xu, Lanyu},
	month = oct,
	year = {2016},
	note = {Conference Name: IEEE Internet of Things Journal},
	keywords = {Bandwidth, Cloud computing, Data privacy, Edge computing, Internet of things, Internet of Things (IoT), Mobile handsets, smart home and city, Smart homes, Time factors},
	pages = {637--646},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/BWZYGVR6/7488250.html:text/html},
}

@article{shukla_improving_2021,
	title = {Improving latency in {Internet}-of-{Things} and cloud computing for real-time data transmission: a systematic literature review ({SLR})},
	issn = {1573-7543},
	shorttitle = {Improving latency in {Internet}-of-{Things} and cloud computing for real-time data transmission},
	url = {https://doi.org/10.1007/s10586-021-03279-3},
	doi = {10.1007/s10586-021-03279-3},
	abstract = {To store, analyse and process the large volume of data generated by IoT traditional cloud computing, is used everywhere. However, the traditional cloud data centres have their limitations to handle high latency issues in time-critical applications of IoT and cloud. Their applications are computer gaming, e-healthcare, telemedicine and robot surgery. The high latency in IoTs and cloud includes high computational, communication latency (service) and network latencies. The vital requirement of IoT is to have minimum network, service and computation latencies for real-time applications. Network latency causes a delay in transmitting a message or communication from one location to another. Services that require data in real-time are almost impossible to access the data via the cloud. Traditional cloud computing approaches are unable to fulfil the quality-of-service (QoS) requirements in IoT devices. Researches related to latency reduction techniques are still in infancy. Some new approaches to minimize the latency for transmitting time-sensitive data in real-time are discussed in this paper for cloud and IoT devices. This research will help the researchers and industries to identify the techniques and technologies to minimize the latencies in IoT and cloud. The paper also discusses the research trends and the technical differences between the various technologies and techniques. With the increasing interest in the literature on latency minimization and its requirements for time-sensitive applications; it is important to systematically review and synthesize the approaches, tools, challenges and techniques to minimize latencies in IoT and cloud. This paper aims at systematically reviewing the state of the art of latency minimization to classify approaches, and techniques. The paper uses a PRISMA technique for a systematic review. The paper further identifies challenges and gaps in this regard for future research. We have identified 23 approaches and 32 technologies associated with latencies in the cloud and IoT. A total of 112 papers on latency reduction have been examined under this study. The existing research gaps and works for latency reduction in IoTs are discussed in detail. There are several challenges and gaps, which requires future research work for improving the latency minimization techniques and technologies. Finally, we present some open issues which will determine the future research direction.},
	language = {en},
	urldate = {2022-06-16},
	journal = {Cluster Computing},
	author = {Shukla, Saurabh and Hassan, Mohd. Fadzil and Tran, Duc Chung and Akbar, Rehan and Paputungan, Irving Vitra and Khan, Muhammad Khalid},
	month = apr,
	year = {2021},
	keywords = {Cloud computing, Communication latency, Computation latency, Fog computing, Internet-of-Things, Latency, Network latency, Queuing delay, Service latency, Transmission delay},
	file = {Full Text PDF:/home/aurel/.cache/zotero/storage/Z6ZZ4GWA/Shukla et al. - 2021 - Improving latency in Internet-of-Things and cloud .pdf:application/pdf},
}

@inproceedings{dillon_cloud_2010,
	title = {Cloud {Computing}: {Issues} and {Challenges}},
	shorttitle = {Cloud {Computing}},
	doi = {10.1109/AINA.2010.187},
	abstract = {Many believe that Cloud will reshape the entire ICT industry as a revolution. In this paper, we aim to pinpoint the challenges and issues of Cloud computing. We first discuss two related computing paradigms - Service-Oriented Computing and Grid computing, and their relationships with Cloud computing. We then identify several challenges from the Cloud computing adoption perspective. Last, we will highlight the Cloud interoperability issue that deserves substantial further research and development.},
	booktitle = {2010 24th {IEEE} {International} {Conference} on {Advanced} {Information} {Networking} and {Applications}},
	author = {Dillon, Tharam and Wu, Chen and Chang, Elizabeth},
	month = apr,
	year = {2010},
	note = {ISSN: 2332-5658},
	keywords = {Cloud computing, Australia, Computer networks, Distributed Comptuing, Distributed computing, Ecosystems, File servers, Grid computing, Intelligent networks, NIST, Physics computing, Servcice-Oriented Computing, Web Services},
	pages = {27--33},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/JQPU3FX2/5474674.html:text/html;IEEE Xplore Full Text PDF:/home/aurel/.cache/zotero/storage/ITB3JQ96/Dillon et al. - 2010 - Cloud Computing Issues and Challenges.pdf:application/pdf},
}

@article{wang_adaptive_2018,
	title = {Adaptive {Computing} {Optimization} in {Software}-{Defined} {Network}-{Based} {Industrial} {Internet} of {Things} with {Fog} {Computing}},
	volume = {18},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {1424-8220},
	url = {https://www.mdpi.com/1424-8220/18/8/2509},
	doi = {10.3390/s18082509},
	abstract = {In recent years, cloud computing and fog computing have appeared one after the other, as promising technologies for augmenting the computing capability of devices locally. By offloading computational tasks to fog servers or cloud servers, the time for task processing decreases greatly. Thus, to guarantee the Quality of Service (QoS) of smart manufacturing systems, fog servers are deployed at network edge to provide fog computing services. In this paper, we study the following problems in a mixed computing system: (1) which computing mode should be chosen for a task in local computing, fog computing or cloud computing? (2) In the fog computing mode, what is the execution sequence for the tasks cached in a task queue? Thus, to solve the problems above, we design a Software-Defined Network (SDN) framework in a smart factory based on an Industrial Internet of Things (IIoT) system. A method based on Computing Mode Selection (CMS) and execution sequences based on the task priority (ASTP) is proposed in this paper. First, a CMS module is designed in the SDN controller and then, after operating the CMS algorithm, each task obtains an optimal computing mode. Second, the task priorities can be calculated according to their real-time performance and calculated amount. According to the task priority, the SDN controller sends a flow table to the SDN switch to complete the task transmission. In other words, the higher the task priority is, the earlier the fog computing service is obtained. Finally, a series of experiments and simulations are performed to evaluate the performance of the proposed method. The results show that our method can achieve real-time performance and high reliability in IIoT.},
	language = {en},
	number = {8},
	urldate = {2022-06-22},
	journal = {Sensors},
	author = {Wang, Juan and Li, Di},
	month = aug,
	year = {2018},
	note = {Number: 8
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {IIoT, computing mode selection (CMS), fog computing, software-defined network (SDN)},
	pages = {2509},
	file = {Full Text PDF:/home/aurel/.cache/zotero/storage/5NQKHDJT/Wang and Li - 2018 - Adaptive Computing Optimization in Software-Define.pdf:application/pdf;Snapshot:/home/aurel/.cache/zotero/storage/SI9TVAYZ/2509.html:text/html},
}

@article{qi_smart_2019,
	title = {A {Smart} {Manufacturing} {Service} {System} {Based} on {Edge} {Computing}, {Fog} {Computing}, and {Cloud} {Computing}},
	volume = {7},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2019.2923610},
	abstract = {The state-of-the-art technologies in new generation information technologies (New IT) greatly stimulate the development of smart manufacturing. In a smart manufacturing environment, more and more devices would be connected to the Internet so that a large volume of data can be obtained during all phases of the product lifecycle. Cloud-based smart manufacturing paradigm facilitates a new variety of applications and services to analyze a large volume of data and enable large-scale manufacturing collaboration. However, different factors, such as the network unavailability, overfull bandwidth, and latency time, restrict its availability for high-speed and low-latency real-time applications. Fog computing and edge computing extended the compute, storage, and networking capabilities of the cloud to the edge, which will respond to the above-mentioned issues. Based on cloud computing, fog computing, and edge computing, in this paper, a hierarchy reference architecture is introduced for smart manufacturing. The architecture is expected to be applied in the digital twin shop floor, which opens a bright perspective of new applications within the field of manufacturing.},
	journal = {IEEE Access},
	author = {Qi, Qinglin and Tao, Fei},
	year = {2019},
	note = {Conference Name: IEEE Access},
	keywords = {Cloud computing, Edge computing, fog computing, Computer architecture, digital twin, edge computing, hierarchical architecture, Manufacturing systems, Real-time systems, smart manufacturing, Smart manufacturing},
	pages = {86769--86777},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/M4DAMU3F/8740963.html:text/html;IEEE Xplore Full Text PDF:/home/aurel/.cache/zotero/storage/SELRNMEB/Qi and Tao - 2019 - A Smart Manufacturing Service System Based on Edge.pdf:application/pdf},
}

@inproceedings{nunna_enabling_2015,
	title = {Enabling {Real}-{Time} {Context}-{Aware} {Collaboration} through {5G} and {Mobile} {Edge} {Computing}},
	doi = {10.1109/ITNG.2015.155},
	abstract = {Creating context-aware ad hoc collaborative systems remains to be one of the primary hurdles hampering the ubiquitous deployment of IT and communication services. Especially under mission-critical scenarios, these services must often adhere to strict timing deadlines. We believe empowering such realtime collaboration systems requires context-aware application platforms working in conjunction with ultra-low latency data transmissions. In this paper, we make a strong case that this could be accomplished by combining the novel communication architectures being proposed for 5G with the principles of Mobile Edge Computing (MEC). We show that combining 5G with MEC would enable inter- and intra-domain use cases that are otherwise not feasible.},
	booktitle = {2015 12th {International} {Conference} on {Information} {Technology} - {New} {Generations}},
	author = {Nunna, Swaroop and Kousaridas, Apostolos and Ibrahim, Mohamed and Dillinger, Markus and Thuemmler, Christoph and Feussner, Hubertus and Schneider, Armin},
	month = apr,
	year = {2015},
	keywords = {5G, Accidents, Collaboration, Context, Context-Awareness, Latency, Mobile communication, Mobile Edge Computing (MEC), Real-time systems, Real-Time Systems, Robotic Surgery, Robots, Servers, Telematics},
	pages = {601--605},
}

@article{suriyachai_survey_2012,
	title = {A {Survey} of {MAC} {Protocols} for {Mission}-{Critical} {Applications} in {Wireless} {Sensor} {Networks}},
	volume = {14},
	issn = {1553-877X},
	doi = {10.1109/SURV.2011.020211.00036},
	abstract = {Wireless Sensor Networks (WSNs) are generally designed to support applications in long-term deployments, and thus WSN protocols are primarily designed to be energy efficient. However, the research community has recently explored new WSN applications such as industrial process automation. These mission-critical applications demand not only energy efficient operation but also strict data transport performance. In particular, data must be transported to a sink in a timely and reliable fashion. Both WSN's data transport performance and energy consumption pattern are mainly defined by the employed medium access control (MAC) protocol. Therefore, this survey paper explores to what extent existing MAC protocols for WSNs can serve mission-critical applications. The reviewed protocols are classified according to data transport performance and suitability for mission-critical applications. The survey reveals that the existing solutions have a number of limitations and only a few recently developed MAC protocols are suitable for this application domain.},
	number = {2},
	journal = {IEEE Communications Surveys \& Tutorials},
	author = {Suriyachai, Petcharat and Roedig, Utz and Scott, Andrew},
	year = {2012},
	note = {Conference Name: IEEE Communications Surveys \& Tutorials},
	keywords = {Delay, Media Access Protocol, Medium Access Control Protocols, Mission critical systems, Mission-Critical Applications, Monitoring, Quality of Service, Reliability, Safety-Critical Applications, Survey, Time-Critical Applications, Wireless Sensor and Actuator Networks, Wireless sensor networks, Wireless Sensor Networks},
	pages = {240--264},
	file = {IEEE Xplore Abstract Record:/home/aurel/.cache/zotero/storage/X5Q7585N/5714974.html:text/html},
}
